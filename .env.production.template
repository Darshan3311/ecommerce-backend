# Production Environment Variables Template
# Copy these to Render Dashboard → Environment Variables

# ===== REQUIRED VARIABLES =====

# Server Configuration
NODE_ENV=production
PORT=10000

# Database - MongoDB Atlas (REQUIRED)
# Get from: https://cloud.mongodb.com → Clusters → Connect → Drivers
MONGODB_URI=mongodb+srv://username:password@cluster.mongodb.net/ecommerce?retryWrites=true&w=majority

# JWT Configuration (REQUIRED - Auto-generated by Render or set manually)
# Generate with: node -e "console.log(require('crypto').randomBytes(32).toString('hex'))"
JWT_SECRET=<auto-generated-by-render-or-generate-32-char-hex>
JWT_EXPIRE=7d
JWT_REFRESH_SECRET=<auto-generated-by-render-or-generate-32-char-hex>
JWT_REFRESH_EXPIRE=30d

# Cloudinary Configuration (REQUIRED - for product images)
# Get from: https://cloudinary.com/console
CLOUDINARY_CLOUD_NAME=your_cloudinary_cloud_name
CLOUDINARY_API_KEY=your_cloudinary_api_key
CLOUDINARY_API_SECRET=your_cloudinary_api_secret

# Frontend URL (REQUIRED - for CORS)
# Your deployed React app URL from Render Static Site
FRONTEND_URL=https://ecommerce-frontend-w2mg.onrender.com

# Session Secret (REQUIRED - Auto-generated by Render)
SESSION_SECRET=<auto-generated-by-render-or-generate-32-char-hex>

# ===== OPTIONAL VARIABLES =====

# Email Configuration (Optional - for user verification emails)
# For Gmail: Create App Password at https://myaccount.google.com/apppasswords
EMAIL_HOST=smtp.gmail.com
EMAIL_PORT=587
EMAIL_USER=work.darshhhuuuuu@gmail.com
EMAIL_PASSWORD=your-gmail-app-password
EMAIL_FROM=noreply@ecommerce.com
CLIENT_URL=https://ecommerce-frontend-w2mg.onrender.com

# Payment Gateway (Optional - for Stripe payments)
# Get from: https://dashboard.stripe.com/apikeys
STRIPE_SECRET_KEY=sk_test_your_stripe_secret_key
STRIPE_PUBLISHABLE_KEY=pk_test_your_stripe_publishable_key

# ===== SETUP INSTRUCTIONS =====

# 1. MongoDB Atlas Setup:
#    - Sign up at https://www.mongodb.com/cloud/atlas
#    - Create free M0 cluster
#    - Database Access → Add User (username + password)
#    - Network Access → Add IP → Allow from Anywhere (0.0.0.0/0)
#    - Connect → Drivers → Copy connection string
#    - Replace <username>, <password>, and database name

# 2. Cloudinary Setup:
#    - Sign up at https://cloudinary.com (free tier)
#    - Dashboard → Account Details
#    - Copy: Cloud Name, API Key, API Secret

# 3. Generate Secrets (if not using auto-generate):
#    Run in terminal: node -e "console.log(require('crypto').randomBytes(32).toString('hex'))"
#    Use output for JWT_SECRET, JWT_REFRESH_SECRET, and SESSION_SECRET
